---
description: 
globs: 
alwaysApply: true
---
Общие правила: Качество кода, тестирование и управление контекстом
Цель

Обеспечить высокое качество кода через автоматизацию тестирования и управления контекстом.
Реализовать самособирающийся контекст для динамического сбора информации.
Предотвратить хаос при тестировании из-за спама npm run dev.

Привязка к файлам

Применяется к *.ts, *.tsx, *.test.* и всем файлам в src/.

Привязка к темам вопросов

Теги: testing, quality, typescript, context, debugging.

Автоматизация тестирования

Генерируй тесты (unit, интеграционные, e2e) для каждого нового или изменённого кода.
Используй TDD: пиши тесты до кода, затем реализуй код.
Запускай тесты после генерации кода и итерируй до успеха.
Обеспечивай минимум 80% покрытия тестами с использованием Jest, Playwright или аналогичных инструментов.
Сохраняй результаты тестов в Mem0:add_memory(
  content = "Результаты тестов: {passed} passed, {failed} failed",
  metadata = { "type": "test_result", "version": "v2" },
  appId = "my-app"
)



Самособирающийся контекст

Для отладки предлагай добавлять отладочные операторы (например, console.log в JavaScript).
Попроси пользователя запустить код или тесты через терминал и предоставить вывод.
Сохраняй вывод в Mem0:add_memory(
  content = "Вывод отладки: {output}",
  metadata = { "type": "debug_output", "version": "v2" },
  appId = "my-app"
)


Используй сохранённый вывод для корректировки кода или предложений.

Управление памятью

При вызове search_memory проверяй, что результат не пустой:search_memory(
  query = "{{message}}",
  filters = { "metadata.type": ["test_result", "debug_output"], "metadata.version": "v2" }
)


Если память пуста, запрашивай уточнения или генерируй код без опоры на память.
Логируй использование памяти для отладки.

Управление сервером

Не запускай npm run dev автоматически. Предполагай, что сервер уже запущен.
Для проверки изменений предложи пользователю обновить страницу или проверить консоль.
Если перезапуск необходим, предложи выполнить:pkill -f "next dev" && npm run dev



Кодстайл

Следуй стандартам Airbnb и Prettier.
Запрещено: console.log в продакшен-коде, тип any, отключение линтера.

Документация

Поддерживай README.md, CHANGELOG.md, ADR в docs/adr.

Пример использования

При запросе "Сгенерируй функцию":
Генерируй тесты с Jest.
Проверяй память через search_memory.
Если нужно, предложи добавить console.log и запустить код.
Сохрани результаты в Mem0.
Предложи пользователю обновить страницу для проверки.





