---
description: 
globs: 
alwaysApply: true
---
# Основные правила для mem0-MCP

## ВАЖНО: Используй все три инструмента памяти регулярно!

```typescript
search_memory() // Поиск информации
add_memory() // Сохранение информации
delete_memory() // Удаление устаревшей информации
```

## Правила успешной работы с памятью

### 1. Начало работы - ВСЕГДА ищи информацию
```typescript
// Поиск перед началом работы - ОБЯЗАТЕЛЬНО!
await search_memory({
  query: "компонент таблица", // 1-3 ключевых слова
  userId: "heist1337",
  agentId: "cursor",
  appId: "bank_system_master"
});
```

### 2. В процессе работы - сохраняй важные решения
```typescript
// Сохранение после завершения важного этапа
await add_memory({
  content: "Описание созданного компонента или решения",
  userId: "heist1337",
  agentId: "cursor",
  appId: "bank_system_master",
  metadata: {
    type: "component",
    tags: ["table", "data"]
  }
});
```

### 3. При обновлении - удаляй устаревшую информацию
```typescript
// Удаление устаревшей информации
const results = await search_memory({
  query: "старая версия",
  userId: "heist1337"
});

if (results.length > 0) {
  await delete_memory({
    memoryId: results[0].id,
    userId: "heist1337",
    agentId: "cursor",
    appId: "bank_system_master"
  });
}
```

## Что нужно запомнить

1. **Используй простые запросы** - короткие (1-3 слова)
2. **Сохраняй важную информацию** - компоненты, конфиги, решения
3. **Удаляй устаревшее** - при изменениях в коде
4. **Всегда указывай ID** - userId, agentId, appId

## Ключевые сценарии использования

### Поиск перед разработкой компонента
```typescript
const existingComponents = await search_memory({
  query: "форма регистрации",
  userId: "heist1337",
  appId: "bank_system_master"
});

// Используй найденную информацию или создавай новое
```

### Сохранение нового компонента
```typescript
await add_memory({
  content: "Компонент RegistrationForm с валидацией и интеграцией с API",
  userId: "heist1337",
  agentId: "cursor",
  appId: "bank_system_master",
  metadata: {
    type: "component",
    tags: ["form", "registration", "validation"],
    path: "src/components/RegistrationForm.tsx" 
  }
});
```

### Обновление с удалением старой версии
```typescript
// Найти старую информацию
const oldVersions = await search_memory({
  query: "форма регистрации",
  userId: "heist1337"
});

// Удалить старую версию
if (oldVersions.length > 0) {
  await delete_memory({
    memoryId: oldVersions[0].id,
    userId: "heist1337"
  });
}

// Сохранить новую версию
await add_memory({
  content: "Обновленная форма регистрации с капчей и двухфакторной аутентификацией",
  userId: "heist1337",
  metadata: {
    type: "component",
    tags: ["form", "registration", "2fa", "captcha"]
  }
});
```