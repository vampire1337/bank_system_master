---
description:
globs:
alwaysApply: false
---
# Как эффективно искать в памяти

## ВСЕГДА используй search_memory в начале задачи!

## Основные правила поиска
1. **Используй КОРОТКИЕ запросы** (1-3 ключевых слова)
2. **Начинай с конкретных терминов**
3. **Используй каскадный поиск** при отсутствии результатов

## Примеры эффективных запросов
✅ `"авторизация"`
✅ `"кнопка оплаты"`
✅ `"валидация формы"`
❌ `"как мы реализовывали авторизацию пользователей в прошлый раз"` (слишком длинный)

## Простой поиск
```typescript
// Простой и эффективный запрос
search_memory({
  query: "профиль пользователя", // КОРОТКИЙ и КОНКРЕТНЫЙ
  userId: "heist1337",
  agentId: "cursor",
  appId: "bank_system_master"
});
```

## Поиск с фильтрами
```typescript
// С фильтрами по метаданным
search_memory({
  query: "транзакция", // КОРОТКИЙ запрос
  userId: "heist1337",
  agentId: "cursor",
  appId: "bank_system_master",
  filters: {
    "metadata.tags": { "$in": ["api", "payment"] }
  }
});
```

## Каскадный поиск (используй при отсутствии результатов)
```typescript
// Сначала пробуем точный термин
const results = await search_memory({
  query: "аутентификация",
  userId: "heist1337",
  appId: "bank_system_master"
});

// Если нет результатов, пробуем синоним
if (results.length === 0) {
  return search_memory({
    query: "вход", // Альтернативный термин
    userId: "heist1337",
    appId: "bank_system_master"
  });
}
```
